def friend_percentile(vo2, age, sex, mode="TM"):    """    Determines the age/sex/mode specific VO2max percentile according to     the FRIEND 2021 reference standards (Kaminsky et al. MCP 2021).        Requires vo2 (ml/kg/min), age, and sex. Default mode is treadmill.        Ref stds are only for those aged 20-89 years.        Sex (case insensitive) can be "m" (male/men) or "f"/"w" (female/woman).        Ref stds are for cycling or treadmill as exercise mode (case insensitive).    """        if not vo2 or not age or not sex:        return None        perc = [99.8, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35,            30, 25, 20, 15, 10, 5, 0.2]    ref_dct = {        "t_m20": [74.7, 62.1, 57.8, 56.0, 54.2, 52.6, 50.9, 49.4, 48.2, 46.9,                45.4, 44.2, 42.8, 41.0, 39.2, 37.3, 34.8, 32.0, 28.8, 24.8, 11.6],        "t_m30": [68.4, 57.9, 54.3, 51.2, 48.7, 46.5, 45.1, 43.5, 41.9, 40.1,                38.6, 37.4, 35.9, 34.3, 32.8, 31.3, 29.4, 27.2, 25.0, 20.6, 7.9],        "t_m40": [64.0, 53.2, 49.5, 46.1, 44.0, 41.8, 40.0, 38.5, 37.2, 36.0,                34.8, 33.4, 32.1, 31.1, 29.7, 28.4, 26.9, 25.4, 22.9, 19.7, 11.2],        "t_m50": [61.5, 46.8, 42.7, 40.1, 37.5, 35.5, 34.1, 32.9, 31.8, 30.7,                29.4, 28.2, 27.2, 26.2, 25.3, 23.9, 22.7, 21.4, 19.2, 16.5, 8.6],        "t_m60": [52.0, 40.2, 36.4, 33.6, 31.6, 29.9, 28.7, 27.6, 26.5, 25.3,                24.4, 23.6, 22.8, 21.8, 20.8, 19.7, 18.6, 17.5, 16.1, 13.8, 7.2],        "t_m70": [44.0, 35.2, 29.6, 27.6, 26.3, 25.0, 23.9, 22.9, 22.3, 21.5,                20.6, 19.9, 19.3, 18.5, 17.6, 16.8, 16.0, 15.0, 13.6, 11.6, 6.5],        "t_m80": [29.7, 25.6, 23.6, 22.3, 21.8, 20.9, 20.4, 19.5, 18.8, 18.3,                17.7, 17.0, 16.7, 16.3, 16.1, 15.9, 15.3, 13.9, 13.2, 12.2, 10.2],        "t_f20": [61.7, 50.1, 47.3, 45.4, 44.1, 42.2, 41.2, 39.6, 38.0, 36.8,                35.6, 34.2, 32.7, 31.3, 29.9, 28.6, 26.6, 24.5, 22.2, 19.3, 12.4],        "t_f30": [56.1, 45.5, 41.1, 38.4, 36.2, 34.5, 33.3, 31.9, 30.7, 29.4,                28.3, 27.3, 26.4, 25.4, 24.3, 23.1, 22.1, 20.7, 19.2, 16.6, 11.4],        "t_f40": [54.6, 40.7, 37.5, 34.7, 32.8, 30.9, 29.8, 28.6, 27.7, 26.6,                25.9, 24.9, 24.2, 23.2, 22.2, 21.3, 20.0, 19.0, 17.4, 15.3, 10.7],        "t_f50": [47.1, 35.3, 31.8, 30.0, 28.4, 27.3, 26.4, 25.5, 24.7, 23.7,                23.1, 22.3, 21.7, 21.0, 20.3, 19.5, 18.7, 17.6, 16.6, 14.5, 7.9],        "t_f60": [40.1, 29.7, 27.3, 25.5, 24.1, 23.1, 22.2, 21.6, 20.8, 20.1,                19.4, 18.8, 18.3, 17.7, 17.0, 16.4, 15.5, 14.7, 13.5, 12.0, 8.2],        "t_f70": [32.0, 24.2, 22.8, 21.4, 20.6, 20.0, 19.2, 18.8, 18.2, 17.7,                17.1, 16.7, 16.1, 15.7, 15.3, 14.8, 14.1, 13.7, 12.3, 11.3, 7.4],        "t_f80": [45.1, 20.7, 19.9, 18.5, 18.0, 17.2, 16.6, 15.8, 15.5, 15.3,                15.1, 14.6, 14.3, 13.8, 13.4, 12.8, 12.4, 11.9, 11.4, 10.7, 9.0],                "c_m20": [73.3, 64.4, 61.0, 58.3, 55.8, 53.8, 51.4, 49.2, 47.2, 44.9,                43.6, 42.0, 40.5, 38.3, 37.0, 35.7, 33.7, 31.9, 28.9, 24.6, 11.0],        "c_m30": [70.6, 53.3, 45.6, 41.8, 38.1, 36.7, 35.3, 33.9, 31.5, 30.8,                30.1, 29.1, 28.1, 27.2, 26.4, 24.5, 23.4, 21.4, 19.4, 16.2, 9.2],        "c_m40": [56.4, 45.2, 40.5, 36.3, 34.6, 32.6, 31.3, 29.8, 28.9, 28.1,                27.5, 26.3, 25.5, 24.9, 23.9, 22.8, 22.1, 21.3, 20.0, 18.3, 9.7],        "c_m50": [60.4, 42.1, 35.8, 33.1, 31.4, 30.0, 28.4, 27.3, 26.4, 25.6,                24.7, 24.0, 23.3, 22.7, 22.4, 21.7, 20.9, 19.6, 18.0, 14.9, 10.5],        "c_m60": [53.3, 36.0, 30.5, 28.2, 26.6, 25.2, 24.4, 23.8, 23.2, 22.6,                21.8, 21.3, 20.8, 20.1, 19.2, 18.7, 18.0, 16.7, 15.4, 12.8, 6.5],        "c_m70": [43.9, 30.7, 27.1, 24.5, 23.2, 21.9, 21.3, 20.5, 19.9, 19.4,                18.5, 18.2, 17.6, 17.1, 16.7, 16.0, 15.7, 14.4, 12.8, 10.1, 6.5],        "c_m80": [37.7, 18.9, 18.8, 17.9, 17.5, 17.3, 17.2, 16.5, 15.5, 14.8,                13.9, 13.3, 12.6, 12.2, 11.2, 10.8, 9.4, 9.0, 8.4, 7.9, 6.5],        "c_f20": [65.4, 50.2, 45.0, 42.6, 40.9, 38.9, 37.2, 35.3, 34.0, 33.1,                31.4, 30.3, 28.9, 27.3, 25.9, 24.1, 22.7, 20.9, 19.4, 17.3,8.9],        "c_f30": [66.6, 36.5, 31.7, 28.6, 26.8, 25.8, 24.6, 23.7, 23.1, 22.2,                21.5, 20.8, 19.9, 19.3, 18.8, 17.9, 17.3, 16.4, 15.2, 13.9, 10.5],        "c_f40": [49.8, 30.5, 26.8, 24.7, 23.5, 22.7, 21.9, 21.3, 20.5, 19.7,                19.0, 18.6, 18.1, 17.3, 16.8, 16.0, 15.5, 14.9, 13.8, 12.7, 8.4],        "c_f50": [38.5, 25.0, 22.6, 21.5, 20.7, 20.0, 19.3, 18.8, 18.2, 17.7,                17.3, 16.9, 16.5, 16.1, 15.6, 15.2, 14.7, 14.3, 13.5, 12.5, 9.5],        "c_f60": [33.1, 21.9, 20.3, 19.1, 18.6, 18.1, 17.6, 16.9, 16.5, 16.1,                15.9, 15.5, 15.3, 14.9, 14.6, 14.2, 13.7, 13.2, 12.5, 11.3, 8.2],        "c_f70": [22.3, 19.1, 18.0, 17.4, 16.8, 16.5, 16.0, 15.7, 15.3, 14.9,                14.6, 14.4, 13.7, 13.6, 13.2, 12.8, 12.5, 12.0, 11.2, 10.1, 5.6],        "c_f80": [18.2, 15.6, 14.1, 13.4, 13.1, 13.0, 12.7, 12.1, 11.6, 11.2,                10.9, 10.4, 9.9, 9.4, 9.3, 9.0, 8.7, 8.6, 7.8, 6.8, 5.8]        }        if mode.lower()[0] == "c":        key_ = "c_"    else:         key_ = "t_"        if sex.lower()[0] == "m":        key_ += "m"    elif sex.lower()[0] == "f" or sex.lower()[0] == "w":        key_ += "f"    else:        return None        if age >= 20.0 and age <= 90.0:        key_ += str(age)[0] + "0"    else:         return None            vo2_lst = ref_dct[key_][::-1]        if vo2 < vo2_lst[0]:            return 0.1    if vo2 > vo2_lst[-1]:        return 99.9        perc_gap = 5    if vo2 < vo2_lst[1] or vo2 > vo2_lst[-2]:        perc_gap = 4.8     high_vo2 = low_idx = 0    low_vo2 = vo2_lst[0]        for i,x in enumerate(vo2_lst):        if vo2 > x:            low_vo2 = x            low_idx = i        else:            high_vo2 = x            break        perc_per_vo2 = (perc_gap / max((high_vo2 - low_vo2), 1))    over_low_vo2 = round(vo2 - low_vo2, 2)    add_to_low_perc = perc_per_vo2 * over_low_vo2    result = round(perc[::-1][low_idx] + add_to_low_perc, 1)                    return result        # print(friend_percentile(22, 25, "m", "CY"))                